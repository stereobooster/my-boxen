class people::stereobooster {
  include dropbox
  include skype
  include iterm2::stable
  include sublime_text_2
  include zsh
  include utorrent
  include java
  include chrome
  include vlc
  include openoffice
  include caffeine
  include alfred
  include skitch
  include imagemagick

  $home     = "/Users/${::boxen_user}"
  $my       = "${home}/my"
  $dotfiles = "${my}/dotfiles"

  file { $my:
    ensure  => directory
  }

  repository { $dotfiles:
    source  => 'stereobooster/dotfiles',
    require => File[$my]
  }

  exec { "install oh-my-zsh":
    command => "curl -L http://install.ohmyz.sh | sh",
    path    => "/usr/bin/:/bin/"
  }

  exec { "install dotfiles":
    command => "${my}/dotfiles/install.sh",
    path    => "/usr/bin/"
  }

  $source = 'http://macapps.mooregreatsoftware.com.s3.amazonaws.com/TrueCrypt-7.1a-OSX.dmg'

  package { 'TrueCrypt':
    source   => $source,
    provider => 'pkgdmg',
    require  => Package['osxfuse']
  }

  if ! defined(Package['osxfuse']) {
    package { 'osxfuse':
      provider => 'homebrew'
    }
  }

  # TODO move to project

  package { 'taglib':
    provider => 'homebrew'
  }

  package { 'sphinx':
    provider => 'homebrew'
  }

  class custom::nginx($port = 80) {
    include ::nginx

    $passenger_version = "4.0.41"
    $passenger_root = "/Library/Ruby/Gems/2.0.0/gems/passenger-${passenger_version}"

    # uninstall system nginx if it's built without passenger or selftest is failing
    # and do it before the onlyif / unless conditions of other blocks are even executed
    $x = inline_template("<%=
      config = File.read('${projects_config}') rescue ''
      if !config.include?('passenger-${passenger_version}') || !system('sudo nginx -t >/dev/null 2>&1')
        puts 'Uninstalling nginx'
        Bundler.with_clean_env { `brew uninstall nginx 2>/dev/null` }
      end
    %>")

    # install passenger into the ruby which nginx will use
    ruby::gem {"passenger-system":
      gem     => 'passenger',
      version => $passenger_version,
      ruby    => "system",
      require => Exec["remove-osx-rake"],
    }

    # remove OSX rake (not the gem rake) to avoid passenger install conflicts
    # throws: "rake" from rake conflicts with /usr/bin/rake
    exec{ "remove-osx-rake":
      command => "rm /usr/bin/rake && yes | gem uninstall rake --force",
      user    => "root",
      onlyif  => "cat /usr/bin/rake | grep 'generated by RubyGems'",
    }

    # make nginx formula install via default ruby and correct passenger version
    file{ "/opt/boxen/homebrew/Library/ENV/4.3/passenger-config":
      content => "#!/bin/sh\necho ${passenger_root}",
      mode    => "0755",
      require => Ruby::Gem["passenger-system"],
    }

    Package <| title == "boxen/brews/nginx" |> {
      install_options => "--with-passenger",
      require => [Ruby::Gem["passenger-system"], File["/opt/boxen/homebrew/Library/ENV/4.3/passenger-config"]],
      notify  => Service['dev.nginx'],
    }
  }

  include custom::nginx
}